services:
  traefik:
    image: traefik:v2.11
    command:
      - "--api.insecure=true"
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.swarmMode=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--log.level=debug"
      - "--log.filePath=/var/log/traefik/traefik.log"
      - "--accesslog=true"
      - "--accesslog.filePath=/var/log/traefik/access.log"
      - "--accesslog.format=json"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - traefik
      - monitor-net
    deploy:
      placement:
        constraints:
          - node.role == manager

  grafana:
    image: grafana/grafana:latest
    env_file:
      - ./grafana/grafana.conf
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    networks:
      - monitor-net
      - traefik
    deploy:
      placement:
        constraints:
          - node.role==manager
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.grafana.rule=PathPrefix(`/grafana`)"
        - "traefik.http.routers.grafana.entrypoints=web"
        - "traefik.http.services.grafana.loadbalancer.server.port=3000"
        - "traefik.docker.network=traefik"
      restart_policy:
        condition: on-failure

  prometheus:
    image: prom/prometheus:v3.5.0
    command:
      - "--config.file=/etc/prometheus/config.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    networks:
      - monitor-net
      - traefik
    deploy:
      placement:
        constraints:
          - node.role==manager
      labels:
        - "traefik.docker.network=traefik"
      restart_policy:
        condition: on-failure

  node-exporter:
    image: prom/node-exporter:latest
    ports:
      - 9100:9100
    command:
      - "--path.procfs=/host/proc"
      - "--path.sysfs=/host/sys"
      - "--path.rootfs=/host/root"
      - "--web.listen-address=:9100"
      - "--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/host/root:ro
    networks:
      - monitor-net
    deploy:
      placement:
        constraints:
          - node.role==manager
      restart_policy:
        condition: on-failure

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    ports:
      - 8088:8080
    command:
      - "--docker=/var/run/docker.sock"
      - "--docker_only=true"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - monitor-net
    deploy:
      placement:
        constraints:
          - node.role==manager
      restart_policy:
        condition: on-failure

  alertmanager:
    image: prom/alertmanager:latest
    ports:
      - 9093:9093
    command:
      - "--config.file=/etc/alertmanager/config.yml"
      - "--storage.path=/alertmanager"
    volumes:
      - ./alertmanager:/etc/alertmanager
    networks:
      - monitor-net
    deploy:
      placement:
        constraints:
          - node.role==manager
      restart_policy:
        condition: on-failure

  loki:
    image: grafana/loki:2.9.0
    ports:
      - 3100:3100
    command: -config.file=/etc/loki/config.yml
    volumes:
      - ./loki:/etc/loki
      - loki_data:/loki
    networks:
      - monitor-net
    deploy:
      placement:
        constraints:
          - node.role==manager
      labels:
        - "traefik.docker.network=traefik"
      restart_policy:
        condition: on-failure

  fluent-bit:
    image: fluent/fluent-bit:latest
    volumes:
      - ./fluent-bit:/fluent-bit/etc
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /tmp:/tmp # Added to fix Fluent Bit DB permission issue
    command: /fluent-bit/bin/fluent-bit -c /fluent-bit/etc/fluent-bit.conf
    networks:
      - monitor-net
    depends_on:
      - loki
    deploy:
      placement:
        constraints:
          - node.role==manager
      restart_policy:
        condition: on-failure

volumes:
  prometheus_data: {}
  grafana_data: {}
  loki_data: {}

networks:
  monitor-net:
    driver: overlay
    name: inbound
  traefik:
    driver: overlay
    name: traefik
